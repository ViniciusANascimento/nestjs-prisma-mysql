var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.399,1,1.72]],["body/controllers/AppController.html",[0,2.039,1,2.507,2,1.552,3,0.398,4,0.343,5,0.343,6,2.812,7,0.516,8,1.532,9,4.386,10,4.386,11,1.683,12,0.036,13,0.85,14,3.398,15,1.532,16,1.997,17,3.139,18,3.398,19,0.523,20,2.812,21,0.795,22,2.278,23,2.426,24,0.398,25,0.088,26,2.426,27,1.907,28,1.851,29,3.398,30,3.398,31,0.026,32,0.026]],["title/modules/AppModule.html",[33,1.155,34,1.928]],["body/modules/AppModule.html",[1,2.635,2,1.88,3,0.353,4,0.304,5,0.304,12,0.035,19,0.619,21,0.704,22,2.712,23,2.149,24,0.353,25,0.078,31,0.024,32,0.024,33,1.769,34,3.707,35,1.374,36,1.374,37,1.69,38,1.69,39,1.374,40,2.635,41,2.635,42,2.491,43,2.491,44,2.491,45,2.491,46,3.063,47,2.755,48,2.311,49,1.374,50,1.52,51,3.01,52,2.94,53,2.491,54,2.491,55,3.01]],["title/injectables/AppService.html",[22,1.399,56,1.155]],["body/injectables/AppService.html",[3,0.425,4,0.367,5,0.367,7,0.551,8,1.6,9,4.499,10,4.499,12,0.036,13,0.888,15,1.6,16,2.049,17,2.285,19,0.425,21,0.85,22,2.13,24,0.425,25,0.094,28,1.933,31,0.027,32,0.027,56,1.757,57,2.039,58,3.005,59,3.632,60,3.632,61,3.632,62,3.632,63,3.005]],["title/controllers/AuthController.html",[0,1.399,64,2.188]],["body/controllers/AuthController.html",[0,1.015,2,1.015,3,0.26,4,0.225,5,0.225,7,0.337,8,1.137,11,1.655,12,0.036,13,0.837,15,1.507,17,1.398,19,0.615,21,0.52,24,0.26,25,0.085,27,1.86,28,1.82,31,0.019,32,0.019,49,1.513,64,2.366,65,1.839,66,1.839,67,2.222,68,3.15,69,2.742,70,2.742,71,2.742,72,2.222,73,2.764,74,3.314,75,2.222,76,1.82,77,1.372,78,0.929,79,1.82,80,2.466,81,2.222,82,2.764,83,3.314,84,2.222,85,2.222,86,2.466,87,3.314,88,2.222,89,3.28,90,2.222,91,2.764,92,3.314,93,2.222,94,1.839,95,3.636,96,2.222,97,1.839,98,2.222,99,2.222,100,1.642,101,1.839,102,2.493,103,2.222,104,2.222,105,1.015,106,2.222,107,1.586,108,2.742,109,2.222,110,1.373,111,1.373,112,2.222,113,2.222,114,2.222,115,2.222,116,2.222,117,2.222,118,1.586,119,2.222]],["title/classes/AuthForgetDTO.html",[25,0.079,73,1.928]],["body/classes/AuthForgetDTO.html",[3,0.464,4,0.4,5,0.4,7,0.602,11,1.493,12,0.035,13,0.755,16,1.857,19,0.464,24,0.464,25,0.127,31,0.029,32,0.029,73,3.101,78,0.838,105,1.81,110,2.223,120,1.359,121,2.767,122,3.28,123,2.042,124,3.011,125,3.963]],["title/classes/AuthLoginDto.html",[25,0.079,82,1.928]],["body/classes/AuthLoginDto.html",[3,0.425,4,0.367,5,0.367,7,0.551,11,1.757,12,0.035,13,0.888,16,2.049,19,0.425,24,0.425,25,0.12,31,0.027,32,0.027,78,0.987,82,2.934,105,1.658,110,2.135,111,2.135,120,1.246,121,2.892,123,1.933,124,2.892,126,3.005,127,3.632,128,3.005,129,3.632,130,2.618,131,2.285,132,3.005]],["title/modules/AuthModule.html",[33,1.155,46,1.72]],["body/modules/AuthModule.html",[1,2.68,2,1.923,3,0.364,4,0.314,5,0.314,12,0.034,19,0.645,21,0.728,22,2.573,23,2.221,24,0.364,25,0.08,31,0.025,32,0.025,33,1.799,35,1.421,36,1.421,37,1.747,38,1.747,39,1.421,40,1.747,41,2.68,46,3.261,47,2.783,48,2.364,49,1.421,50,1.571,52,3.007,53,2.575,54,2.575,133,2.575,134,2.575,135,3.112,136,2.783,137,3.112,138,3.112,139,2.221,140,2.575,141,3.112,142,3.112,143,3.112]],["title/classes/AuthRegisterDto.html",[25,0.079,86,1.72]],["body/classes/AuthRegisterDto.html",[3,0.363,4,0.313,5,0.313,7,0.47,11,1.925,12,0.035,13,0.973,16,1.925,19,0.492,24,0.363,25,0.108,31,0.025,32,0.025,77,1.312,78,1.08,86,2.358,105,1.415,110,1.74,111,1.74,120,1.063,121,1.739,123,1.74,124,2.358,130,2.358,131,1.949,144,2.564,145,2.642,146,2.332,147,2.642,148,2.212,149,4.227,150,2.564,151,2.564,152,2.564,153,2.212,154,2.212,155,2.212,156,2.867,157,2.212,158,2.212,159,2.212,160,2.564,161,3.099,162,1.739]],["title/classes/AuthResetDTO.html",[25,0.079,91,1.928]],["body/classes/AuthResetDTO.html",[3,0.425,4,0.367,5,0.367,7,0.551,11,1.757,12,0.035,13,0.888,16,2.049,19,0.425,24,0.425,25,0.12,31,0.027,32,0.027,78,0.987,91,2.934,105,1.658,111,2.135,118,3.678,120,1.246,121,2.892,123,1.933,128,3.005,130,2.618,131,2.285,132,3.005,163,3.005,164,3.632,165,5.152,166,3.632]],["title/injectables/AuthService.html",[56,1.155,102,1.928]],["body/injectables/AuthService.html",[3,0.18,4,0.155,5,0.155,7,0.233,8,0.853,12,0.036,13,0.848,15,1.452,16,2.081,19,0.522,21,0.36,24,0.18,25,0.04,27,1.759,28,1.754,31,0.015,32,0.015,49,1.136,56,0.937,57,0.863,68,3.1,69,2.059,70,2.98,71,2.059,76,1.846,77,1.449,78,0.942,79,1.846,80,2.376,86,2.021,95,1.272,97,1.272,100,1.846,101,1.272,102,1.565,107,1.776,108,2.593,110,1.639,111,1.639,118,2.823,139,1.098,156,0.863,167,1.272,168,2.488,169,2.488,170,1.537,171,4.232,172,2.593,173,1.644,174,1.537,175,2.488,176,1.537,177,2.488,178,4.792,179,1.537,180,2.488,181,1.537,182,2.488,183,1.537,184,2.488,185,1.537,186,2.571,187,2.488,188,1.537,189,1.272,190,1.537,191,1.098,192,1.272,193,1.272,194,1.098,195,1.537,196,1.537,197,1.582,198,1.537,199,1.537,200,1.537,201,1.537,202,1.537,203,1.537,204,1.537,205,1.537,206,2.488,207,2.488,208,2.059,209,1.537,210,3.021,211,1.537,212,1.537,213,1.537,214,2.593,215,2.237,216,1.537,217,2.571,218,2.488,219,1.537,220,2.488,221,1.537,222,2.488,223,3.134,224,1.537,225,1.537,226,2.488,227,1.537,228,1.537,229,1.537,230,1.537,231,1.272,232,1.272]],["title/classes/CreateUserDTO.html",[25,0.079,146,1.27]],["body/classes/CreateUserDTO.html",[3,0.341,4,0.295,5,0.295,7,0.442,11,1.876,12,0.035,13,0.948,16,2.127,19,0.341,24,0.341,25,0.104,31,0.024,32,0.024,77,1.441,78,1.053,105,1.331,110,1.912,111,1.912,120,1,123,1.669,124,2.591,130,2.591,131,1.834,146,1.669,147,2.904,148,2.081,153,2.081,154,2.876,155,2.876,156,3.168,157,2.876,158,2.876,159,2.876,233,4.324,234,1.834,235,2.915,236,2.915,237,2.915,238,2.915,239,4.028,240,4.028,241,4.028]],["title/classes/LogInterceptor.html",[25,0.079,242,1.928]],["body/classes/LogInterceptor.html",[3,0.374,4,0.323,5,0.323,7,0.485,8,1.47,12,0.036,13,0.608,15,1.095,19,0.502,21,0.747,24,0.374,25,0.082,28,1.323,31,0.025,32,0.025,76,1.323,77,0.997,78,0.675,79,1.323,120,1.095,194,2.279,210,3.059,242,2.696,243,2.642,244,2.696,245,4.837,246,4.285,247,4.285,248,4.279,249,4.003,250,5.17,251,3.192,252,2.642,253,4.837,254,4.285,255,3.192,256,4.285,257,4.285,258,3.192,259,3.546,260,3.192,261,3.192,262,3.192,263,3.192,264,3.192]],["title/modules/PrismaModule.html",[33,1.155,136,1.547]],["body/modules/PrismaModule.html",[3,0.413,4,0.356,5,0.356,12,0.035,19,0.536,21,0.826,24,0.413,25,0.091,31,0.027,32,0.027,33,1.915,35,1.611,36,1.611,37,1.98,38,1.98,39,1.611,40,2.852,41,2.852,48,2.569,49,1.611,50,1.781,136,2.935,173,2.779,265,2.919,266,2.919,267,2.919,268,3.528,269,3.528]],["title/injectables/PrismaService.html",[56,1.155,173,1.399]],["body/injectables/PrismaService.html",[3,0.384,4,0.331,5,0.331,7,0.497,8,1.496,12,0.036,13,0.83,15,1.496,19,0.511,21,0.767,24,0.384,25,0.085,31,0.026,32,0.026,56,1.643,57,1.84,68,3.205,76,1.358,77,1.023,78,0.693,79,1.358,145,2.743,173,1.991,191,2.34,217,3.114,244,2.062,270,2.712,271,4.901,272,4.361,273,5.595,274,4.361,275,5.225,276,3.277,277,3.277,278,3.277,279,3.277,280,3.277,281,3.277]],["title/classes/UpdatePatchUserDto.html",[25,0.079,282,1.72]],["body/classes/UpdatePatchUserDto.html",[3,0.488,4,0.421,5,0.421,12,0.032,19,0.595,24,0.488,25,0.107,31,0.03,32,0.03,120,1.428,145,3.197,146,1.726,162,2.338,234,2.62,282,2.852,283,2.973,284,2.62,285,5.081,286,2.62,287,4.164,288,3.446,289,3.446]],["title/classes/UpdatePutUserDto.html",[25,0.079,290,1.72]],["body/classes/UpdatePutUserDto.html",[3,0.372,4,0.321,5,0.321,7,0.482,11,1.945,12,0.035,13,0.983,16,1.945,19,0.372,24,0.372,25,0.082,31,0.025,32,0.025,77,1.334,78,1.092,110,1.77,111,1.77,120,1.09,123,1.77,124,1.784,130,1.784,145,2.688,146,2.348,147,2.688,148,2.269,149,4.271,150,2.63,151,2.63,152,2.63,153,2.269,154,2.269,155,2.269,156,2.897,157,2.269,158,2.269,159,2.269,160,2.63,162,1.784,234,2,283,2.269,286,2,290,2.398,291,2]],["title/controllers/UserController.html",[0,1.399,292,1.928]],["body/controllers/UserController.html",[0,0.857,2,0.857,3,0.22,4,0.19,5,0.19,7,0.285,8,1,11,1.739,12,0.035,13,0.879,15,1.583,17,1.834,19,0.564,20,1.554,21,0.439,24,0.22,25,0.048,26,1.34,27,1.054,28,1.912,31,0.017,32,0.017,66,1.554,68,3.216,76,1.807,77,1.362,78,0.922,79,1.807,80,2.591,89,2.957,100,1.481,146,1.669,162,2.006,186,3.73,197,2.514,208,1.554,232,1.554,242,1.181,282,2.261,284,1.834,286,1.834,290,2.261,291,1.834,292,1.834,293,1.554,294,2.957,295,3.333,296,2.915,297,2.412,298,2.412,299,1.554,300,1.877,301,1.877,302,1.554,303,4.472,304,2.915,305,1.877,306,1.877,307,1.877,308,2.915,309,1.877,310,1.554,311,2.915,312,1.877,313,1.554,314,2.915,315,1.877,316,1.554,317,1.877,318,1.877,319,1.554,320,2.412,321,1.554,322,1.877,323,1.34,324,1.877,325,1.877,326,1.877,327,1.877,328,1.877,329,1.877,330,1.877,331,1.877,332,1.877,333,1.877,334,1.877,335,1.877,336,1.877,337,1.877]],["title/classes/UserIdCheckMiddleware.html",[25,0.079,338,1.928]],["body/classes/UserIdCheckMiddleware.html",[3,0.398,4,0.343,5,0.343,7,0.516,8,1.532,12,0.034,13,0.647,15,1.166,19,0.523,21,0.795,24,0.398,25,0.088,31,0.026,32,0.026,76,1.408,77,1.061,78,0.719,79,1.408,94,2.812,120,1.166,189,2.812,197,2.255,244,2.81,249,4.129,259,4.386,338,2.81,339,3.696,340,2.812,341,4.99,342,4.467,343,4.467,344,4.99,345,5.3,346,5.3,347,3.398,348,2.812,349,2.812,350,3.398,351,3.398]],["title/modules/UserModule.html",[33,1.155,47,1.547]],["body/modules/UserModule.html",[2,1.795,3,0.33,4,0.284,5,0.284,8,0.966,12,0.034,13,0.536,15,0.966,19,0.604,21,0.659,24,0.33,25,0.073,31,0.023,32,0.023,33,1.707,35,1.285,36,1.285,37,1.58,38,1.58,39,1.285,40,2.543,41,2.543,47,2.871,48,2.207,49,1.285,50,1.421,52,2.807,76,1.166,77,0.879,78,0.595,79,1.166,100,2.433,136,2.699,140,2.33,197,1.421,244,1.771,292,2.85,321,2.33,338,1.771,348,2.33,352,2.33,353,2.815,354,2.33,355,2.33,356,2.815,357,2.815,358,3.932,359,4.904,360,2.815,361,2.815,362,3.932,363,2.815,364,2.815,365,2.815,366,2.815,367,2.815,368,2.815,369,2.815,370,2.815]],["title/injectables/UserService.html",[56,1.155,100,1.27]],["body/injectables/UserService.html",[3,0.197,4,0.17,5,0.17,7,0.255,8,0.917,12,0.036,13,0.913,15,1.584,19,0.484,21,0.393,24,0.197,25,0.043,26,1.2,27,0.944,28,1.825,31,0.016,32,0.016,56,1.007,57,0.944,68,3.217,76,1.914,77,1.58,78,0.977,79,1.914,80,2.472,100,1.107,107,1.2,110,1.107,111,1.378,146,1.571,147,2.384,162,1.867,172,2.212,173,1.731,186,2.706,192,1.391,197,2.493,210,1.2,214,1.391,215,3.144,217,2.706,231,2.212,282,2.128,284,1.057,286,1.681,290,2.128,291,1.057,294,2.212,297,2.212,298,2.212,299,2.212,302,1.391,303,4.35,310,1.391,313,1.391,316,1.391,319,1.391,320,2.212,371,1.391,372,2.672,373,3.79,374,2.672,375,1.681,376,1.681,377,1.681,378,1.681,379,2.672,380,1.681,381,1.681,382,2.672,383,1.681,384,2.672,385,1.681,386,1.681,387,1.681,388,1.681,389,1.681,390,2.672,391,1.681,392,3.327,393,1.681,394,1.681,395,1.681,396,1.681,397,1.681,398,1.681,399,1.681,400,1.681,401,1.681,402,1.681,403,1.681,404,1.681,405,1.681,406,1.681,407,1.681,408,1.681,409,1.681,410,1.681,411,1.681,412,1.681,413,1.681]],["title/coverage.html",[414,2.976]],["body/coverage.html",[0,1.987,1,1.468,5,0.264,6,2.165,12,0.036,22,1.194,25,0.144,31,0.022,32,0.022,39,1.194,56,1.788,58,2.165,64,1.867,65,2.165,73,1.645,78,0.553,82,1.645,86,1.468,91,1.645,100,1.084,102,1.645,121,2.664,122,2.165,126,2.165,144,2.165,146,1.084,156,3.378,163,2.165,167,2.165,173,1.194,197,1.321,215,1.867,233,2.165,234,2.738,242,1.645,243,2.165,270,2.165,282,1.468,283,2.665,284,1.645,290,1.468,291,1.645,292,1.645,293,2.165,323,1.867,338,1.645,339,2.165,340,2.165,371,2.165,414,1.867,415,2.165,416,2.616,417,2.616,418,5.019,419,4.747,420,2.616,421,4.353,422,2.165,423,2.165,424,2.616,425,4.353,426,2.165,427,2.616,428,2.616,429,2.616,430,2.616,431,2.616]],["title/dependencies.html",[36,1.681,432,2.123]],["body/dependencies.html",[12,0.036,21,0.913,25,0.126,31,0.029,32,0.029,36,1.781,105,1.781,139,2.785,191,2.785,194,2.785,288,3.228,289,3.228,349,3.228,433,5.326,434,3.9,435,3.9,436,3.9,437,3.9,438,3.9,439,3.9,440,3.9,441,3.9,442,3.9,443,3.9,444,3.9,445,3.9]],["title/miscellaneous/functions.html",[446,1.614,447,3.047]],["body/miscellaneous/functions.html",[7,0.695,12,0.032,31,0.032,32,0.032,39,2.607,426,3.788,446,2.88,447,3.788,448,4.577]],["title/index.html",[7,0.389,449,2.566,450,2.566]],["body/index.html",[4,0.19,12,0.033,31,0.017,32,0.017,50,2.33,63,1.554,193,1.554,295,1.554,414,1.34,415,2.412,451,1.877,452,1.877,453,3.573,454,2.915,455,1.877,456,1.877,457,1.877,458,1.877,459,2.915,460,1.554,461,3.573,462,1.877,463,1.877,464,1.877,465,4.028,466,1.877,467,4.028,468,4.979,469,1.877,470,4.816,471,1.877,472,1.877,473,1.877,474,2.915,475,1.877,476,2.915,477,1.877,478,3.573,479,1.877,480,2.915,481,1.877,482,1.877,483,1.877,484,1.877,485,1.877,486,4.028,487,4.979,488,4.616,489,1.877,490,2.915,491,1.877,492,1.877,493,1.877,494,1.877,495,1.877,496,4.616,497,2.915,498,4.028,499,1.877,500,2.915,501,1.877,502,1.877,503,2.915,504,4.616,505,4.028,506,1.877,507,2.915,508,1.877,509,1.877,510,1.877,511,1.877,512,4.028,513,1.877,514,1.877,515,1.877,516,1.877,517,2.915,518,1.877,519,1.877,520,1.877,521,1.877,522,1.877,523,2.915,524,1.877,525,1.877,526,2.915,527,1.877,528,1.877,529,3.333,530,2.915,531,1.877,532,1.877,533,1.877,534,1.877,535,1.877,536,1.877,537,1.877,538,1.877,539,2.915,540,1.877,541,1.877,542,1.877,543,1.877,544,3.573,545,1.877,546,1.877,547,1.877,548,1.877,549,1.877,550,2.915,551,1.877,552,1.877,553,1.877,554,1.877,555,1.877,556,2.915,557,1.877,558,1.877,559,1.877,560,2.915,561,2.915,562,1.877,563,1.877,564,1.877,565,1.877,566,1.877,567,1.877,568,1.877,569,1.877,570,1.877,571,1.877,572,1.554,573,1.877,574,1.877,575,1.877,576,1.877,577,1.877,578,1.877,579,1.554]],["title/modules.html",[35,1.903]],["body/modules.html",[12,0.03,31,0.03,32,0.03,34,2.665,35,1.934,46,2.378,47,2.139,136,2.139,529,4.753,580,5.743,581,5.743,582,5.743]],["title/overview.html",[583,3.45]],["body/overview.html",[2,1.331,12,0.035,22,2.616,31,0.024,32,0.024,33,1.098,34,3.604,35,1.331,36,1.331,37,1.636,38,1.636,39,1.331,40,1.636,41,1.636,42,2.412,43,2.412,44,2.412,45,2.412,46,3.168,47,2.893,48,2.261,49,1.331,50,1.472,57,1.636,100,2.295,120,1,133,2.412,134,2.412,136,2.797,173,2.529,265,2.412,266,2.412,267,2.412,352,2.412,354,2.412,355,2.412,583,2.412,584,4.028,585,2.915,586,2.915]],["title/properties.html",[123,1.526,432,2.123]],["body/properties.html",[12,0.036,31,0.031,32,0.031,123,1.862,460,3.719,572,3.719,579,3.719,587,4.494,588,4.494,589,4.494]],["title/miscellaneous/variables.html",[446,1.614,590,3.047]],["body/miscellaneous/variables.html",[7,0.643,12,0.035,28,1.755,31,0.03,32,0.03,80,2.378,248,3.505,252,3.505,323,3.666,422,3.505,423,4.249,446,2.665,590,3.505,591,4.236,592,4.236,593,4.236,594,4.236,595,4.236]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":156,"title":{},"body":{"classes/AuthRegisterDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":588,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":585,"title":{},"body":{"overview.html":{}}}],["4",{"_index":584,"title":{},"body":{"overview.html":{}}}],["5.22.0",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":154,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["7",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.8.1",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":586,"title":{},"body":{"overview.html":{}}}],["accesstoken",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowing",{"_index":518,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":566,"title":{},"body":{"index.html":{}}}],["app",{"_index":277,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":281,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["application",{"_index":488,"title":{},"body":{"index.html":{}}}],["applications",{"_index":459,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":34,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["audience",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":64,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["authforgetdto",{"_index":73,"title":{"classes/AuthForgetDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"coverage.html":{}}}],["authlogindto",{"_index":82,"title":{"classes/AuthLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["authmodule",{"_index":46,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":572,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authregisterdto",{"_index":86,"title":{"classes/AuthRegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthRegisterDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authresetdto",{"_index":91,"title":{"classes/AuthResetDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthResetDTO.html":{},"coverage.html":{}}}],["authservice",{"_index":102,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["await",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":507,"title":{},"body":{"index.html":{}}}],["backers",{"_index":567,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserIdCheckMiddleware.html":{}}}],["badrequestexception(error",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["based",{"_index":502,"title":{},"body":{"index.html":{}}}],["birthat",{"_index":147,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{},"injectables/UserService.html":{}}}],["board",{"_index":559,"title":{},"body":{"index.html":{}}}],["body",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":582,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":580,"title":{},"body":{"modules.html":{}}}],["building",{"_index":454,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":250,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["catch",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["channel",{"_index":532,"title":{},"body":{"index.html":{}}}],["check",{"_index":496,"title":{},"body":{"index.html":{}}}],["check.middleware",{"_index":366,"title":{},"body":{"modules/UserModule.html":{}}}],["check.middleware.ts",{"_index":340,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{},"coverage.html":{}}}],["check.middleware.ts:5",{"_index":347,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["checktoken",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["checktoken(token",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":25,"title":{"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"classes/UserIdCheckMiddleware.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":120,"title":{},"body":{"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"classes/UserIdCheckMiddleware.html":{},"overview.html":{}}}],["clcmxjgs@#qtb+avfs7n#mzu%7q!rct",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["clicks",{"_index":517,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":501,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_imports",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":265,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":266,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":267,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":352,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":354,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":353,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":355,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":524,"title":{},"body":{"index.html":{}}}],["configure",{"_index":357,"title":{},"body":{"modules/UserModule.html":{}}}],["configure(consumer",{"_index":358,"title":{},"body":{"modules/UserModule.html":{}}}],["console.log(`execução",{"_index":262,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["console.log(`url",{"_index":261,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["const",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(jwtservice",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(prisma",{"_index":375,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["consumer",{"_index":361,"title":{},"body":{"modules/UserModule.html":{}}}],["consumer.apply(useridcheckmiddleware).forroutes",{"_index":367,"title":{},"body":{"modules/UserModule.html":{}}}],["context",{"_index":252,"title":{},"body":{"classes/LogInterceptor.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":260,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":326,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["courses",{"_index":538,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":414,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":286,"title":{},"body":{"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":328,"title":{},"body":{"controllers/UserController.html":{}}}],["create(data",{"_index":299,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createparamdecorator((_data",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtoken",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(user",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":146,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto:17",{"_index":160,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/UpdatePutUserDto.html":{}}}],["createuserdto:21",{"_index":150,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/UpdatePutUserDto.html":{}}}],["createuserdto:5",{"_index":152,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/UpdatePutUserDto.html":{}}}],["createuserdto:8",{"_index":151,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/UpdatePutUserDto.html":{}}}],["data",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["data.birthat",{"_index":404,"title":{},"body":{"injectables/UserService.html":{}}}],["data.email",{"_index":401,"title":{},"body":{"injectables/UserService.html":{}}}],["data.name",{"_index":398,"title":{},"body":{"injectables/UserService.html":{}}}],["data.password",{"_index":407,"title":{},"body":{"injectables/UserService.html":{}}}],["data:{email",{"_index":393,"title":{},"body":{"injectables/UserService.html":{}}}],["date(birthat",{"_index":394,"title":{},"body":{"injectables/UserService.html":{}}}],["date(data.birthat",{"_index":405,"title":{},"body":{"injectables/UserService.html":{}}}],["date(data.email",{"_index":402,"title":{},"body":{"injectables/UserService.html":{}}}],["date(data.name",{"_index":399,"title":{},"body":{"injectables/UserService.html":{}}}],["date(data.password",{"_index":408,"title":{},"body":{"injectables/UserService.html":{}}}],["date.now",{"_index":257,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["days",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{}}}],["decorators/param",{"_index":324,"title":{},"body":{"controllers/UserController.html":{}}}],["deeper",{"_index":534,"title":{},"body":{"index.html":{}}}],["default",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":294,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":304,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@paramid",{"_index":336,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(id",{"_index":302,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(id:number",{"_index":409,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":36,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":486,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":506,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":497,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":516,"title":{},"body":{"index.html":{}}}],["description",{"_index":460,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":471,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":545,"title":{},"body":{"index.html":{}}}],["discord",{"_index":531,"title":{},"body":{"index.html":{}}}],["dive",{"_index":533,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":415,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dt",{"_index":256,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["dto/auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":319,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":320,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":481,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":455,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":494,"title":{},"body":{"index.html":{}}}],["email",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{},"injectables/UserService.html":{}}}],["enableshutdownhooks",{"_index":272,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":274,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ensure",{"_index":492,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":549,"title":{},"body":{"index.html":{}}}],["enviar",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":467,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":248,"title":{},"body":{"classes/LogInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":413,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":372,"title":{},"body":{"injectables/UserService.html":{}}}],["exists(id",{"_index":379,"title":{},"body":{"injectables/UserService.html":{}}}],["experience",{"_index":536,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":349,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":145,"title":{},"body":{"classes/AuthRegisterDto.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{}}}],["fast",{"_index":510,"title":{},"body":{"index.html":{}}}],["features",{"_index":520,"title":{},"body":{"index.html":{}}}],["few",{"_index":512,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["focus",{"_index":519,"title":{},"body":{"index.html":{}}}],["follow",{"_index":553,"title":{},"body":{"index.html":{}}}],["forget",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forget(@body",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["forget(email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["forget(undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["forget.dto",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["forget.dto.ts",{"_index":122,"title":{},"body":{"classes/AuthForgetDTO.html":{},"coverage.html":{}}}],["forget.dto.ts:5",{"_index":125,"title":{},"body":{"classes/AuthForgetDTO.html":{}}}],["framework",{"_index":453,"title":{},"body":{"index.html":{}}}],["full",{"_index":548,"title":{},"body":{"index.html":{}}}],["function",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":447,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":515,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":308,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":449,"title":{"index.html":{}},"body":{}}],["graph",{"_index":541,"title":{},"body":{"index.html":{}}}],["grow",{"_index":563,"title":{},"body":{"index.html":{}}}],["hands",{"_index":535,"title":{},"body":{"index.html":{}}}],["handy",{"_index":525,"title":{},"body":{"index.html":{}}}],["hello",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":539,"title":{},"body":{"index.html":{}}}],["here",{"_index":570,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":576,"title":{},"body":{"index.html":{}}}],["id",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["id.decorator",{"_index":325,"title":{},"body":{"controllers/UserController.html":{}}}],["id.decorator.ts",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["if(!user",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(birthat",{"_index":403,"title":{},"body":{"injectables/UserService.html":{}}}],["if(email",{"_index":400,"title":{},"body":{"injectables/UserService.html":{}}}],["if(isnan(number(req.params.id",{"_index":350,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["if(name",{"_index":397,"title":{},"body":{"injectables/UserService.html":{}}}],["if(password",{"_index":406,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":244,"title":{},"body":{"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":275,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":499,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":522,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":149,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/UpdatePutUserDto.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["install",{"_index":514,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":469,"title":{},"body":{"index.html":{}}}],["interact",{"_index":542,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":246,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["intercept(context",{"_index":247,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["interceptors/log.interceptor",{"_index":322,"title":{},"body":{"controllers/UserController.html":{}}}],["isdatestring",{"_index":239,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isemail",{"_index":124,"title":{},"body":{"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["isjwt",{"_index":165,"title":{},"body":{"classes/AuthResetDTO.html":{}}}],["isoptional",{"_index":240,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isoptional()@isdatestring",{"_index":148,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["ispassportnumber",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["isstring",{"_index":130,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["isstring()@minlength(6",{"_index":128,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthResetDTO.html":{}}}],["isstrongpassword",{"_index":241,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstrongpassword({minlength",{"_index":153,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["issuer",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["job",{"_index":556,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":558,"title":{},"body":{"index.html":{}}}],["join",{"_index":569,"title":{},"body":{"index.html":{}}}],["jwtmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":573,"title":{},"body":{"index.html":{}}}],["key",{"_index":489,"title":{},"body":{"index.html":{}}}],["learn",{"_index":527,"title":{},"body":{"index.html":{}}}],["legend",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["levou",{"_index":263,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["license",{"_index":579,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":561,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":555,"title":{},"body":{"index.html":{}}}],["list",{"_index":373,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(undefined",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.dto",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.dto.ts",{"_index":126,"title":{},"body":{"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:5",{"_index":127,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["login.dto.ts:9",{"_index":129,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["loginterceptor",{"_index":242,"title":{"classes/LogInterceptor.html":{}},"body":{"classes/LogInterceptor.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["looking",{"_index":500,"title":{},"body":{"index.html":{}}}],["loop",{"_index":551,"title":{},"body":{"index.html":{}}}],["makes",{"_index":508,"title":{},"body":{"index.html":{}}}],["managing",{"_index":521,"title":{},"body":{"index.html":{}}}],["matching",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":504,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":369,"title":{},"body":{"modules/UserModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["middlewareconsumer",{"_index":359,"title":{},"body":{"modules/UserModule.html":{}}}],["middlewares/user",{"_index":365,"title":{},"body":{"modules/UserModule.html":{}}}],["milisegundos",{"_index":264,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["minlength",{"_index":131,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(6",{"_index":132,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthResetDTO.html":{}}}],["minlowercase",{"_index":155,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["minnumbers",{"_index":157,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["minsymbols",{"_index":159,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["minuppercase",{"_index":158,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["miscellaneous",{"_index":446,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":560,"title":{},"body":{"index.html":{}}}],["mode",{"_index":474,"title":{},"body":{"index.html":{}}}],["module",{"_index":33,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":35,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":498,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":574,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthRegisterDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["need",{"_index":546,"title":{},"body":{"index.html":{}}}],["nest",{"_index":461,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":578,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":245,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["nestjs",{"_index":487,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":288,"title":{},"body":{"classes/UpdatePatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":341,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["nestmodule",{"_index":362,"title":{},"body":{"modules/UserModule.html":{}}}],["new",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["next",{"_index":249,"title":{},"body":{"classes/LogInterceptor.html":{},"classes/UserIdCheckMiddleware.html":{}}}],["next.handle().pipe(tap",{"_index":258,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["nextfunction",{"_index":346,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["node.js",{"_index":452,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":316,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`user",{"_index":412,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":468,"title":{},"body":{"index.html":{}}}],["null",{"_index":395,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":303,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["number(context.switchtohttp().getrequest().params.id",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(req.params.id",{"_index":351,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["o",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":253,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["offer",{"_index":557,"title":{},"body":{"index.html":{}}}],["official",{"_index":505,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":273,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":562,"title":{},"body":{"index.html":{}}}],["optional",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":583,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":432,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["paramid",{"_index":323,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parseintpipe",{"_index":317,"title":{},"body":{"controllers/UserController.html":{}}}],["part",{"_index":547,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":287,"title":{},"body":{"classes/UpdatePatchUserDto.html":{}}}],["partialtype(createuserdto",{"_index":285,"title":{},"body":{"classes/UpdatePatchUserDto.html":{}}}],["password",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":284,"title":{},"body":{"classes/UpdatePatchUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["patch(':id",{"_index":314,"title":{},"body":{"controllers/UserController.html":{}}}],["path:'/users/:id",{"_index":368,"title":{},"body":{"modules/UserModule.html":{}}}],["platform",{"_index":503,"title":{},"body":{"index.html":{}}}],["please",{"_index":530,"title":{},"body":{"index.html":{}}}],["possible",{"_index":495,"title":{},"body":{"index.html":{}}}],["post",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('forget",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["prisma.service",{"_index":269,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":271,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":136,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":173,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["production",{"_index":476,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":451,"title":{},"body":{"index.html":{}}}],["project",{"_index":465,"title":{},"body":{"index.html":{}}}],["promise",{"_index":254,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["properties",{"_index":123,"title":{"properties.html":{}},"body":{"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{},"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":291,"title":{},"body":{"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["put(':id",{"_index":311,"title":{},"body":{"controllers/UserController.html":{}}}],["questions",{"_index":528,"title":{},"body":{"index.html":{}}}],["read",{"_index":295,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["readone",{"_index":296,"title":{},"body":{"controllers/UserController.html":{}}}],["readone(@paramid",{"_index":330,"title":{},"body":{"controllers/UserController.html":{}}}],["readone(id",{"_index":307,"title":{},"body":{"controllers/UserController.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":485,"title":{},"body":{"index.html":{}}}],["real",{"_index":543,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.dto",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register.dto.ts",{"_index":144,"title":{},"body":{"classes/AuthRegisterDto.html":{},"coverage.html":{}}}],["repository",{"_index":464,"title":{},"body":{"index.html":{}}}],["req",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserIdCheckMiddleware.html":{}}}],["request",{"_index":259,"title":{},"body":{"classes/LogInterceptor.html":{},"classes/UserIdCheckMiddleware.html":{}}}],["requestmethod",{"_index":363,"title":{},"body":{"modules/UserModule.html":{}}}],["requestmethod.all",{"_index":370,"title":{},"body":{"modules/UserModule.html":{}}}],["requiring",{"_index":511,"title":{},"body":{"index.html":{}}}],["res",{"_index":344,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["reset(@body",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset(password",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset(undefined",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset.dto",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset.dto.ts",{"_index":163,"title":{},"body":{"classes/AuthResetDTO.html":{},"coverage.html":{}}}],["reset.dto.ts:6",{"_index":164,"title":{},"body":{"classes/AuthResetDTO.html":{}}}],["reset.dto.ts:9",{"_index":166,"title":{},"body":{"classes/AuthResetDTO.html":{}}}],["resources",{"_index":523,"title":{},"body":{"index.html":{}}}],["response",{"_index":345,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["results",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["run",{"_index":470,"title":{},"body":{"index.html":{}}}],["runs",{"_index":493,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/LogInterceptor.html":{},"dependencies.html":{}}}],["scalable",{"_index":456,"title":{},"body":{"index.html":{}}}],["secret",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["server",{"_index":457,"title":{},"body":{"index.html":{}}}],["sethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["setup",{"_index":466,"title":{},"body":{"index.html":{}}}],["show",{"_index":374,"title":{},"body":{"injectables/UserService.html":{}}}],["show(id",{"_index":382,"title":{},"body":{"injectables/UserService.html":{}}}],["side",{"_index":458,"title":{},"body":{"index.html":{}}}],["simple",{"_index":513,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":565,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../param",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:8",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:83",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth",{"_index":121,"title":{},"body":{"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"coverage.html":{}}}],["src/decorators/param",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interceptors/log.interceptor.ts",{"_index":243,"title":{},"body":{"classes/LogInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/log.interceptor.ts:5",{"_index":251,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["src/main.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/user",{"_index":339,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":268,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":270,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":276,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":278,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":233,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":283,"title":{},"body":{"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"coverage.html":{}}}],["src/users/user.controller.ts",{"_index":293,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/user.controller.ts:28",{"_index":301,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:33",{"_index":306,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:38",{"_index":309,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:43",{"_index":312,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:48",{"_index":315,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:54",{"_index":305,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.module.ts",{"_index":356,"title":{},"body":{"modules/UserModule.html":{}}}],["src/users/user.module.ts:14",{"_index":360,"title":{},"body":{"modules/UserModule.html":{}}}],["src/users/user.service.ts",{"_index":371,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/user.service.ts:13",{"_index":377,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:19",{"_index":381,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:23",{"_index":383,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:29",{"_index":385,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:37",{"_index":386,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:54",{"_index":378,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:61",{"_index":380,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:8",{"_index":376,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":472,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":475,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":477,"title":{},"body":{"index.html":{}}}],["started",{"_index":450,"title":{"index.html":{}},"body":{}}],["starter",{"_index":463,"title":{},"body":{"index.html":{}}}],["statements",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":550,"title":{},"body":{"index.html":{}}}],["steps",{"_index":490,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":509,"title":{},"body":{"index.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/UpdatePutUserDto.html":{}}}],["string(user.id",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":529,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":581,"title":{},"body":{"modules.html":{}}}],["table",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":491,"title":{},"body":{"index.html":{}}}],["tap",{"_index":255,"title":{},"body":{"classes/LogInterceptor.html":{}}}],["test",{"_index":480,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":483,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":482,"title":{},"body":{"index.html":{}}}],["tests",{"_index":478,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":564,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":279,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":280,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.sethello",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.forget(email",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(email,password",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.reset(password,token",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.createtoken(user",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.exists(id",{"_index":392,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.count({where:{id",{"_index":411,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.create",{"_index":387,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":410,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findfirst",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findmany",{"_index":388,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":389,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.userservice.create(data",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":337,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.list",{"_index":329,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.show(id",{"_index":331,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":333,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepartial(id",{"_index":335,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":544,"title":{},"body":{"index.html":{}}}],["todo",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{}}}],["touch",{"_index":571,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["try",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":577,"title":{},"body":{"index.html":{}}}],["type",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"classes/LogInterceptor.html":{},"injectables/PrismaService.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types",{"_index":289,"title":{},"body":{"classes/UpdatePatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":462,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"email",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"user",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":384,"title":{},"body":{"injectables/UserService.html":{}}}],["unit",{"_index":479,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":589,"title":{},"body":{"properties.html":{}}}],["update",{"_index":297,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@paramid",{"_index":332,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":310,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id:number",{"_index":391,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepartial",{"_index":298,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepartial(@paramid",{"_index":334,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepartial(id",{"_index":313,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepartial(id:number",{"_index":396,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepatchuserdto",{"_index":282,"title":{"classes/UpdatePatchUserDto.html":{}},"body":{"classes/UpdatePatchUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateputuserdto",{"_index":290,"title":{"classes/UpdatePutUserDto.html":{}},"body":{"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updates",{"_index":552,"title":{},"body":{"index.html":{}}}],["use",{"_index":342,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["use(req",{"_index":343,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{}}}],["useinterceptors",{"_index":318,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(loginterceptor",{"_index":327,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(loginterceptor)@post",{"_index":300,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":364,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":162,"title":{},"body":{"classes/AuthRegisterDto.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":234,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UpdatePatchUserDto.html":{},"classes/UpdatePutUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":238,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:21",{"_index":235,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:5",{"_index":237,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:8",{"_index":236,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.email",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":321,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":292,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["useridcheckmiddleware",{"_index":338,"title":{"classes/UserIdCheckMiddleware.html":{}},"body":{"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":47,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["users/dto/create",{"_index":161,"title":{},"body":{"classes/AuthRegisterDto.html":{}}}],["users/user.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/user.service",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["userservice",{"_index":100,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["validar",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthForgetDTO.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRegisterDto.html":{},"classes/AuthResetDTO.html":{},"classes/CreateUserDTO.html":{},"dependencies.html":{}}}],["value",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":590,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":587,"title":{},"body":{"properties.html":{}}}],["video",{"_index":537,"title":{},"body":{"index.html":{}}}],["visit",{"_index":526,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":540,"title":{},"body":{"index.html":{}}}],["void",{"_index":348,"title":{},"body":{"classes/UserIdCheckMiddleware.html":{},"modules/UserModule.html":{}}}],["watch",{"_index":473,"title":{},"body":{"index.html":{}}}],["website",{"_index":575,"title":{},"body":{"index.html":{}}}],["where:{email",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["where:{email,password",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["where:{id",{"_index":390,"title":{},"body":{"injectables/UserService.html":{}}}],["working",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["world",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":554,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":568,"title":{},"body":{"index.html":{}}}],["you're",{"_index":484,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                setHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get, Param, Post} from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n  @Post()\n  setHello(): string {\n    return this.appService.setHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport {UserModule} from \"./users/user.module\";\nimport {AuthModule} from \"./auth/auth.module\";\n\n@Module({\n  imports: [UserModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n  exports: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                setHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHello\n                        \n                    \n                \n            \n            \n                \nsetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n  setHello(): string {\n    return 'POST Working';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                forget\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        forget\n                        \n                    \n                \n            \n            \n                \n                        \n                    forget(undefined: AuthForgetDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forget')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AuthForgetDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(undefined: AuthLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AuthLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(body: AuthRegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            AuthRegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(undefined: AuthResetDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            AuthResetDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, Post, Req} from \"@nestjs/common\";\nimport {AuthLoginDto} from \"./dto/auth-login.dto\";\nimport {AuthRegisterDto} from \"./dto/auth-register.dto\";\nimport {AuthForgetDTO} from \"./dto/auth-forget.dto\";\nimport {AuthResetDTO} from \"./dto/auth-reset.dto\";\nimport {UserService} from \"../users/user.service\";\nimport {AuthService} from \"./auth.service\";\nimport {isPassportNumber} from \"class-validator\";\n\n@Controller('auth')\nexport class AuthController {\n\n    constructor(\n        private readonly userService: UserService,\n        private readonly authService: AuthService,\n    ) {}\n\n    @Post('login')\n    async login(@Body() {email, password}: AuthLoginDto) {\n        return this.authService.login(email,password)\n    }\n\n    @Post('register')\n    async register(@Body() body: AuthRegisterDto) {\n        return this.authService.register(body)\n    }\n\n    @Post('forget')\n    async forget(@Body() {email}: AuthForgetDTO) {\n        return this.authService.forget(email)\n    }\n\n    @Post('reset')\n    async reset(@Body() {password, token}: AuthResetDTO) {\n        return this.authService.reset(password,token)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthForgetDTO.html":{"url":"classes/AuthForgetDTO.html","title":"class - AuthForgetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthForgetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-forget.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-forget.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail} from \"class-validator\";\n\nexport class AuthForgetDTO {\n    @IsEmail()\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginDto.html":{"url":"classes/AuthLoginDto.html","title":"class - AuthLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-login.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-login.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail, IsString, MinLength} from \"class-validator\";\n\nexport class AuthLoginDto {\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    @MinLength(6)\n    password: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAuthModule->AppService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from \"@nestjs/common\";\nimport {JwtModule} from \"@nestjs/jwt\";\nimport {AppController} from \"../app.controller\";\nimport {UserModule} from \"../users/user.module\";\nimport {PrismaModule} from \"../prisma/prisma.module\";\nimport {AppService} from \"../app.service\";\n\n@Module({\n    imports: [\n        JwtModule.register({\n            secret: \"cLCMXJgS@#qTb+aVFS7n#mzU%7Q!RcT*\"\n            }),\n        UserModule,\n        PrismaModule\n    ],\n    controllers: [AppController],\n    exports: [AppService]\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRegisterDto.html":{"url":"classes/AuthRegisterDto.html","title":"class - AuthRegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-register.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateUserDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                birthAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        birthAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 6, minLowercase: 0, minNumbers: 0, minUppercase: 0, minSymbols: 0})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail, IsString, MinLength} from \"class-validator\";\nimport {CreateUserDTO} from \"../../users/dto/create-user.dto\";\n\nexport class AuthRegisterDto extends CreateUserDTO{\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResetDTO.html":{"url":"classes/AuthResetDTO.html","title":"class - AuthResetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-reset.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsJWT()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-reset.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsJWT, IsString, MinLength} from \"class-validator\";\n\nexport class AuthResetDTO {\n    @IsString()\n    @MinLength(6)\n    password: string;\n\n    @IsJWT()\n    token: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkToken\n                            \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Async\n                                forget\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, prisma: PrismaService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        forget\n                        \n                    \n                \n            \n            \n                \n                        \n                    forget(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: AuthRegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthRegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(password: string, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {BadRequestException, Injectable, UnauthorizedException} from \"@nestjs/common\";\nimport {JwtService} from \"@nestjs/jwt\";\nimport {User} from \"@prisma/client\";\nimport {PrismaService} from \"../prisma/prisma.service\";\nimport {using} from \"rxjs\";\nimport {AuthRegisterDto} from \"./dto/auth-register.dto\";\nimport {UserService} from \"../users/user.service\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly jwtService: JwtService,\n        private readonly prisma: PrismaService,\n        private readonly userService: UserService,\n    ) {}\n\n    async createToken(user: User) {\n        return {\n            accessToken: this.jwtService.sign({\n                    id: user.id,\n                    name: user.name,\n                    email: user.email\n                },{\n                    expiresIn: \"7 days\",\n                    subject: String(user.id),\n                    issuer: 'Login',\n                    audience: 'users',\n                }\n            )\n        }\n    }\n\n    async checkToken(token: string){\n        try {\n            const data = this.jwtService.verify(token, {\n                audience: 'users',\n                issuer: 'login'\n            })\n            return data;\n        } catch (error) {\n            throw new BadRequestException(error)\n        }\n    }\n\n    async login(email: string, password: string){\n        const user = await this.prisma.user.findFirst({\n            where:{email,password},\n        })\n\n        if(!user){\n            throw new UnauthorizedException(\"User or Email incorrect\");\n        }\n\n        return this.createToken(user);\n    }\n\n    async forget(email: string){\n        const user = await this.prisma.user.findFirst({\n            where:{email},\n        })\n\n        if(!user){\n            throw new UnauthorizedException(\"Email incorrect\");\n        }\n        //TODO enviar email...\n        return true;\n    }\n\n    async reset(password: string, token: string){\n        //TODO: Validar o token\n        const id = 0;\n        const user = await this.prisma.user.update({\n            where:{\n                id,\n            },\n            data:{\n                password\n            }\n        })\n        return this.createToken(user)\n    }\n\n    async register(data: AuthRegisterDto) {\n        const user = await this.userService.create(data);\n\n        return this.createToken(user);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                birthAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        birthAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 6, minLowercase: 0, minNumbers: 0, minUppercase: 0, minSymbols: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsDateString, IsEmail, IsOptional, IsString, IsStrongPassword} from \"class-validator\";\n\nexport class CreateUserDTO {\n    @IsString()\n    name: string;\n\n    @IsEmail()\n    email: string;\n\n    @IsStrongPassword({\n        minLength: 6,\n        minLowercase: 0,\n        minNumbers: 0,\n        minUppercase: 0,\n        minSymbols: 0\n    })\n    password: string;\n\n    @IsOptional()\n    @IsDateString()\n    birthAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogInterceptor.html":{"url":"classes/LogInterceptor.html","title":"class - LogInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/log.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/log.interceptor.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {CallHandler, ExecutionContext, NestInterceptor} from \"@nestjs/common\";\nimport {Observable, tap} from \"rxjs\";\n\nexport class LogInterceptor implements NestInterceptor{\n    intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n\n        const dt = Date.now();\n\n       return next.handle().pipe(tap(() => {\n\n           const request = context.switchToHttp().getRequest();\n\n           console.log(`URL: ${request}`)\n           console.log(`Execução levou: ${Date.now() - dt } milisegundos.`);\n       }))\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport {PrismaService} from \"./prisma.service\";\n\n@Module({\n    providers: [PrismaService],\n    exports: [PrismaService],\n})\nexport class PrismaModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {INestApplication, Injectable, OnModuleInit,} from \"@nestjs/common\";\nimport {PrismaClient} from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n\n    async onModuleInit(){\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication){\n        this.$on('beforeExit', async () => {\n            await app.close()\n        })\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePatchUserDto.html":{"url":"classes/UpdatePatchUserDto.html","title":"class - UpdatePatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDTO)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CreateUserDTO} from \"./create-user.dto\";\nimport {PartialType} from '@nestjs/mapped-types';\n\nexport class UpdatePatchUserDto extends PartialType(CreateUserDTO){\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePutUserDto.html":{"url":"classes/UpdatePutUserDto.html","title":"class - UpdatePutUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePutUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-put-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateUserDTO\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                birthAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        birthAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 6, minLowercase: 0, minNumbers: 0, minUppercase: 0, minSymbols: 0})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateUserDTO\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateUserDTO:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CreateUserDTO} from \"./create-user.dto\";\n\nexport class UpdatePutUserDto extends CreateUserDTO{}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                read\n                            \n                            \n                                    \n                                    Async\n                                readOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    Async\n                                updatePartial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(LogInterceptor)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/user.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        readOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    readOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, data: UpdatePutUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdatePutUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updatePartial\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePartial(id: number, data: UpdatePatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/user.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdatePatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    NotFoundException,\n    Param,\n    ParseIntPipe,\n    Patch,\n    Post,\n    Put,\n    UseInterceptors\n} from \"@nestjs/common\";\nimport {CreateUserDTO} from \"./dto/create-user.dto\";\nimport {UpdatePutUserDto} from \"./dto/update-put-user.dto\";\nimport {UpdatePatchUserDto} from \"./dto/update-patch-user.dto\";\nimport {UserService} from \"./user.service\";\nimport {LogInterceptor} from \"../interceptors/log.interceptor\";\nimport {ParamId} from \"../decorators/param-id.decorator\";\n\n@Controller('users')\nexport class UserController {\n\n    constructor(private readonly userService: UserService) {}\n\n    @UseInterceptors(LogInterceptor)\n    @Post()\n    async create(@Body() data: CreateUserDTO){\n        return this.userService.create(data);\n    }\n\n    @Get()\n    async read(){\n        return this.userService.list();\n    }\n\n    @Get(':id')\n    async readOne(@ParamId() id: number){\n        return this.userService.show(id);\n    }\n\n    @Put(':id')\n    async update(@ParamId() id: number, @Body() data : UpdatePutUserDto){\n        return this.userService.update(id, data);\n    }\n\n    @Patch(':id')\n    async updatePartial(@ParamId() id: number,  @Body() data: UpdatePatchUserDto){\n\n        return this.userService.updatePartial(id, data)\n    }\n\n    @Delete(':id')\n    async delete(@ParamId() id: number){\n\n        return this.userService.delete(id)\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserIdCheckMiddleware.html":{"url":"classes/UserIdCheckMiddleware.html","title":"class - UserIdCheckMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserIdCheckMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/user-id-check.middleware.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/user-id-check.middleware.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {BadRequestException, NestMiddleware} from \"@nestjs/common\";\nimport {Request, Response, NextFunction} from \"express\";\n\nexport class UserIdCheckMiddleware  implements  NestMiddleware{\n    use(req: Request, res: Response, next: NextFunction ) {\n        if(isNaN(Number(req.params.id)) || Number(req.params.id) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {MiddlewareConsumer, Module, NestModule, RequestMethod} from \"@nestjs/common\";\nimport {UserController} from \"./user.controller\";\nimport {UserService} from \"./user.service\";\nimport {PrismaModule} from \"../prisma/prisma.module\";\nimport {UserIdCheckMiddleware} from \"../middlewares/user-id-check.middleware\";\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [UserController],\n    providers: [UserService],\n    exports: [UserService]\n})\nexport class UserModule implements NestModule{\n    configure(consumer: MiddlewareConsumer){\n        consumer.apply(UserIdCheckMiddleware).forRoutes({\n            path:'/users/:id',\n            method: RequestMethod.ALL,\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                show\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePartial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateUserDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exists\n                        \n                    \n                \n            \n            \n                \n                        \n                    exists(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        show\n                        \n                    \n                \n            \n            \n                \n                        \n                    show(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, undefined: UpdatePutUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            UpdatePutUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePartial\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePartial(id: number, undefined: UpdatePatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            UpdatePatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, NotFoundException} from \"@nestjs/common\";\nimport {CreateUserDTO} from \"./dto/create-user.dto\";\nimport {PrismaService} from \"../prisma/prisma.service\";\nimport {UpdatePutUserDto} from \"./dto/update-put-user.dto\";\nimport {UpdatePatchUserDto} from \"./dto/update-patch-user.dto\";\n\n@Injectable()\nexport class UserService {\n\n    constructor(private readonly prisma: PrismaService) {\n    }\n\n    async create(data: CreateUserDTO){\n        return this.prisma.user.create({\n            data,\n        });\n    }\n\n    async list(){\n        return this.prisma.user.findMany();\n    }\n\n    async show(id: number){\n        return this.prisma.user.findUnique({\n            where:{id},\n        });\n    }\n\n    async update(id:number, {email, password, name, birthAt}: UpdatePutUserDto){\n        await this.exists(id)\n\n        return this.prisma.user.update({\n            data:{email, password, name, birthAt: birthAt ? new Date(birthAt) : null},\n            where: {id}\n        });\n    }\n    async updatePartial(id:number, {email, password, name, birthAt}: UpdatePatchUserDto){\n        await this.exists(id)\n\n        const data: any = {};\n        if(name) data.name = new Date(data.name)\n        if(email) data.email = new Date(data.email)\n        if(birthAt) data.birthAt = new Date(data.birthAt)\n        if(password) data.password = new Date(data.password)\n\n        return this.prisma.user.update({\n            data,\n            where: {\n                id\n            }\n        })\n    }\n\n    async delete(id:number){\n        await this.exists(id)\n        return this.prisma.user.delete({\n            where:{id}\n        })\n    }\n\n    async exists(id: number){\n        if( !(await this.prisma.user.count({where:{id} }))){\n            throw new NotFoundException(`User with id ${id} does not exist`);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-forget.dto.ts\n            \n            class\n            AuthForgetDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-login.dto.ts\n            \n            class\n            AuthLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-register.dto.ts\n            \n            class\n            AuthRegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-reset.dto.ts\n            \n            class\n            AuthResetDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/decorators/param-id.decorator.ts\n            \n            variable\n            ParamId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/log.interceptor.ts\n            \n            class\n            LogInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/user-id-check.middleware.ts\n            \n            class\n            UserIdCheckMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-patch-user.dto.ts\n            \n            class\n            UpdatePatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-put-user.dto.ts\n            \n            class\n            UpdatePutUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.22.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService \n\nAppService \n\nAppService  -->\n\nAuthModule->AppService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ParamId   (src/.../param-id.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/param-id.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ParamId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    return Number(context.switchToHttp().getRequest().params.id)\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
